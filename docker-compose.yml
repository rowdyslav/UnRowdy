services:
  db:
    image: mongo:latest
    container_name: unrowdy_mongo
    env_file:
      - .env
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    # healthcheck:
    #   test: ["CMD", "mongo", "--eval", "db.runCommand({ ping: 1 })", "--quiet"]
    #   interval: 10s
    #   timeout: 5s
    #   retries: 5
    #   start_period: 10s
    # restart: unless-stopped
  backend:
    tty: true
    container_name: unrowdy_backend
    build:
      context: ./backend
    env_file:
      - .env
      - backend/.env
    # depends_on:
    #   db:
    #     condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - backend_venv:/app/.venv
    develop:
      watch:
        - action: sync
          path: ./backend
          target: /app
          ignore:
            - .venv/
        - action: rebuild
          path: ./uv.lock
  frontend:
    tty: true
    container_name: unrowdy_frontend
    build:
      context: ./frontend
    env_file:
      - frontend/.env
    ports:
      - "80:80"
    volumes:
      - frontend_venv:/app/.venv
    develop:
      watch:
        - action: sync
          path: ./frontend
          target: /app
          ignore:
            - .venv/
        - action: rebuild
          path: ./uv.lock
volumes:
  mongo_data:
  backend_venv:
  frontend_venv:
